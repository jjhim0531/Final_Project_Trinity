<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberMapper">

	<!-- 단축 설정 -->
	<resultMap type="com.project.trinity.member.model.vo.Member"
		id="memberResultSet">
		<result column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="BIRTHDAY" property="birthday" />
		<result column="GENDER" property="gender" />
		<result column="ADDRESS" property="address" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="STATUS" property="status" />
		<result column="ISADMIN" property="isAdmin" />
		<result column="MED_KEY" property="medKey" />
		<result column="HOS_NO" property="hosNo" />
		<result column="USERPROFILE" property="userProfile" />
		<result column="POSTCODE" property="postcode" />
		
	</resultMap>

	<resultMap id="rankupResultSet" type="Rankup">
		<result column="SEQ_NO" property="seqNo" />
		<result column="USER_NO" property="userNo" />
		<result column="RES_TITLE" property="resTitle" />
		<result column="SUBJECT" property="subject" />
		<result column="LIC_PICTURE" property="licPicture" />
		<result column="STATUS" property="status" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_ID" property="userId" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
	</resultMap>

	<resultMap type="HealthReservation"
		id="HealthReservationResultSet">
		<result property="hResNo" column="H_RES_NO" />
		<result property="userNo" column="USER_NO" />
		<result property="gstNo" column="GST_NO" /> <!-- PATIENT_NAME 추가 -->
		<result property="hosNo" column="HOS_NO" />
		<result property="resDate" column="RES_DATE" />
		<result property="resTime" column="RES_TIME" />
		<result property="resCategory" column="RES_CATEGORY" />
		<result property="resComment" column="RES_COMMENT" />
		<result property="patientName" column="PATIENT_NAME" />
		<result property="patientBirthday" column="PATIENT_BIRTH" />
		<result property="patientEmail" column="PATIENT_EMAIL" />
		<result property="patientGender" column="PATIENT_GENDER" />
		<result property="patientResult" column="PATIENT_RESULT" />
	</resultMap>

	<!-- 로그인 쿼리 -->
	<select id="loginMember"
		parameterType="com.project.trinity.member.model.vo.Member"
		resultMap="memberResultSet">
		SELECT USER_NO,
		USER_ID,
		USER_PWD,
		USER_NAME,
		EMAIL,
		PHONE,
		BIRTHDAY,
		GENDER,
		ADDRESS,
		ENROLL_DATE,
		STATUS,
		ISADMIN,
		MED_KEY,
		HOS_NO
		FROM
		MEMBER
		WHERE USER_ID = #{userId}
		AND STATUS = 'Y'
	</select>

	<!-- 아이디 중복 확인 쿼리 -->
	<select id="idCheck" parameterType="string" resultType="int">
		SELECT
		COUNT(*) FROM MEMBER WHERE USER_ID = #{checkId}
	</select>

	<!-- userId로 회원 정보 조회 -->
	<select id="findByUserId" parameterType="string"
		resultType="member">
		SELECT * FROM MEMBER WHERE USER_ID = #{userId}
	</select>


	<insert id="insertMember" parameterType="member">
    INSERT INTO MEMBER
    (USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, POSTCODE, ADDRESS, GENDER)
    VALUES (
        #{userId},
        #{userPwd},
        #{userName},
        #{email},
        #{phone},
        TO_CHAR(TO_DATE(#{birthday}, 'YYYY-MM-DD'), 'YYMMDD'),
        #{postcode},
        #{address},
        #{gender}
    )
</insert>


	<update id="updateMember" parameterType="member">
    UPDATE MEMBER
    SET
        USER_NAME = #{userName},
        BIRTHDAY = #{birthday},
        EMAIL = #{email},
        POSTCODE = #{postcode}, <!-- 추가 -->
        ADDRESS = #{address},
        USERPROFILE = #{userProfile},
        USER_PWD = #{userPwd}
    WHERE USER_ID = #{userId}
</update>



	<!-- 이메일로 아이디 찾기 -->
	<select id="findIdByEmail" parameterType="map"
		resultType="string">
		SELECT USER_ID
		FROM MEMBER
		WHERE USER_NAME = #{userName} AND
		EMAIL = #{email}
	</select>

	<!-- 휴대전화로 아이디 찾기 -->
	<select id="findIdByPhone" parameterType="map"
		resultType="string">
		SELECT USER_ID
		FROM MEMBER
		WHERE USER_NAME = #{userName} AND
		PHONE = #{phone}
	</select>

	<select id="findMemberForResetPassword" parameterType="map"
		resultType="com.project.trinity.member.model.vo.Member">
		SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId}
		AND USER_NAME =
		#{userName}
		AND EMAIL = #{email}
	</select>


	<update id="updateTemporaryPassword" parameterType="map">
		UPDATE MEMBER
		SET USER_PWD = #{encryptedPassword}
		WHERE USER_ID = #{userId}
	</update>

	<update id="updatePassword" parameterType="map">
		UPDATE MEMBER
		SET
		USER_PWD = #{encryptedPassword}
		WHERE USER_ID = #{userId}
	</update>


	<update id="deleteMember" parameterType="string">
		UPDATE MEMBER
		SET STATUS = 'N' <!-- 상태 비활성화 -->
		WHERE USER_ID = #{userId}
	</update>


</mapper>