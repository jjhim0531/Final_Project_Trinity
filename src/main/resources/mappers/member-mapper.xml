<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberMapper">

	<!-- 단축 설정 -->
	<resultMap type="com.project.trinity.member.model.vo.Member"
		id="memberResultSet">
		<result column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="BIRTHDAY" property="birthday" />
		<result column="GENDER" property="gender" />
		<result column="ADDRESS" property="address" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="STATUS" property="status" />
		<result column="ISADMIN" property="isAdmin" />
		<result column="MED_KEY" property="medKey" />
		<result column="HOS_NO" property="hosNo" />
		<result column="USERPROFILE" property="userProfile" />
	</resultMap>

	<!-- 로그인 쿼리 -->
	<select id="loginMember"
		parameterType="com.project.trinity.member.model.vo.Member"
		resultMap="memberResultSet">
		SELECT USER_NO,
		USER_ID,
		USER_PWD,
		USER_NAME,
		EMAIL,
		PHONE,
		BIRTHDAY,
		GENDER,
		ADDRESS,
		ENROLL_DATE,
		STATUS,
		ISADMIN,
		MED_KEY,
		HOS_NO,
		USERPROFILE
		FROM MEMBER
		WHERE USER_ID = #{userId}
		AND STATUS = 'Y'
	</select>

	<!-- 아이디 중복 확인 쿼리 -->
	<select id="idCheck" parameterType="string" resultType="int">
		SELECT
		COUNT(*) FROM MEMBER WHERE USER_ID = #{checkId}
	</select>

	<!-- userId로 회원 정보 조회 -->
	<select id="findByUserId" parameterType="string"
		resultType="com.project.trinity.member.model.vo.Member">
		SELECT * FROM MEMBER WHERE USER_ID = #{userId}
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember"
		parameterType="com.project.trinity.member.model.vo.Member">
		INSERT INTO MEMBER (USER_ID, USER_PWD, USER_NAME, EMAIL,
		PHONE, BIRTHDAY,
		ADDRESS, GENDER)
		VALUES (#{userId}, #{userPwd},
		#{userName}, #{email}, #{phone},
		TO_DATE(#{birthday}, 'YYYY-MM-DD'),
		#{address}, #{gender})
	</insert>

	<!-- 관리자 회원 목록 조회 -->
	<select id="getAllMembers" resultMap="memberResultSet">
		SELECT USER_NO,
		USER_ID,
		USER_NAME,
		EMAIL,
		PHONE,
		BIRTHDAY,
		GENDER,
		ADDRESS,
		ENROLL_DATE,
		STATUS,
		ISADMIN,
		MED_KEY,
		HOS_NO
		FROM MEMBER
	</select>

	<!-- 회원 정보 업데이트 -->
	<update id="updateMember"
		parameterType="com.project.trinity.member.model.vo.Member">
		UPDATE MEMBER
		SET USER_NAME = #{userName},
		BIRTHDAY =
		#{birthday},
		EMAIL = #{email},
		ADDRESS = #{address},
		USERPROFILE =
		#{userProfile}
		WHERE USER_ID = #{userId}
	</update>

	<!-- 이메일로 아이디 찾기 -->
	<select id="findIdByEmail" parameterType="map"
		resultType="string">
		SELECT USER_ID
		FROM MEMBER
		WHERE USER_NAME = #{userName} AND EMAIL = #{email}
	</select>

	<!-- 휴대전화로 아이디 찾기 -->
	<select id="findIdByPhone" parameterType="map"
		resultType="string">
		SELECT USER_ID
		FROM MEMBER
		WHERE USER_NAME = #{userName} AND PHONE = #{phone}
	</select>




</mapper>
