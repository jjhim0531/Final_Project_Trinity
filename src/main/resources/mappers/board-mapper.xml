<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
	<resultMap id="boardResult" type="Board">
		<!-- 게시글 정보 -->
		<id property="boardNo" column="BOARD_NO" />
		<result property="boardType" column="BOARD_TYPE" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="userNo" column="USER_NO" />
		<result property="boardWriter" column="BOARD_WRITER" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="enrollDate" column="ENROLL_DATE" />
		<result property="modifiedDate" column="MODIFIED_DATE" />
		<result property="boardViews" column="BOARD_VIEWS" />
		<result property="boardCategory" column="BOARD_CATEGORY" />
		<result property="status" column="STATUS" />

		<!-- 첨부파일 정보 -->
		<collection property="attachedFiles" ofType="BoardFile">
			<id property="fileNo" column="FILE_NO" />
			<result property="originName" column="ORIGIN_NAME" />
			<result property="changeName" column="CHANGE_NAME" />
			<result property="allowDownload" column="ALLOW_DOWNLOAD" />
			<result property="fileSize" column="FILE_SIZE" />
		</collection>
	</resultMap>



	<!-- 게시글 총 갯수 조회 -->
	<select id="selectListCount" resultType="int">
		SELECT COUNT(*) FROM
		BOARD
	</select>

	<!-- 게시글 리스트 조회 -->
	<select id="selectList" resultType="Board">
    SELECT B.BOARD_NO AS boardNo,
           B.BOARD_CATEGORY AS boardCategory,
           B.BOARD_TITLE AS boardTitle,
           M.USER_ID AS boardWriter, -- MEMBER 테이블에서 USER_ID를 가져옴
           TO_CHAR(B.ENROLL_DATE, 'YYYY-MM-DD') AS enrollDate, -- 수정된 부분
           B.BOARD_VIEWS AS boardViews
    FROM BOARD B
    JOIN MEMBER M ON B.USER_NO = M.USER_NO -- 조인 추가
    <choose>
        <when test="sortType == '조회수'">
            ORDER BY B.BOARD_VIEWS DESC
        </when>
        <when test="sortType == '작성일'">
            ORDER BY B.ENROLL_DATE DESC
        </when>
        <otherwise>
            ORDER BY B.BOARD_NO DESC
        </otherwise>
    </choose>
</select>



	<!-- 게시글 조회수 증가 -->
	<update id="increaseCount">
		UPDATE BOARD
		SET BOARD_VIEWS = 'BV' ||
		LPAD(TO_NUMBER(SUBSTR(BOARD_VIEWS, 3)) + 1, 5,
		'0')
		WHERE BOARD_NO =
		#{boardNo}
	</update>


	<!-- 게시글 추가 -->
	<insert id="insertBoard" parameterType="Board">
		INSERT INTO BOARD (
		USER_NO,
		BOARD_TITLE,
		BOARD_CONTENT,
		BOARD_CATEGORY
		)
		VALUES (
		#{userNo},
		#{boardTitle},
		#{boardContent},
		#{boardCategory}
		)
		<selectKey keyProperty="boardNo"
			resultType="java.lang.String" order="AFTER">
			select 'B' ||
			SEQ_BOARD_NO.CURRVAL FROM DUAL
		</selectKey>
	</insert>


	<!-- 첨부파일 저장 -->
	<insert id="insertFile" parameterType="BoardFile">
		INSERT INTO FILE_TABLE (
		FILE_NO,
		BOARD_NO,
		USER_NO,
		ORIGIN_NAME,
		CHANGE_NAME,
		ALLOW_DOWNLOAD,
		File_Size
		) VALUES (
		SEQ_FILE_NO.NEXTVAL,
		#{boardNo},
		#{userNo},
		#{originName},
		#{changeName},
		CASE WHEN #{allowDownload} IS NULL THEN 'Y' ELSE #{allowDownload} END,
		#{fileSize}
		)
	</insert>

	<update id="updateFileAllowDownload" parameterType="BoardFile">
		UPDATE FILE_TABLE
		SET ALLOW_DOWNLOAD = #{allowDownload}
		WHERE FILE_NO = #{fileNo}
	</update>
	
	<delete id="deleteFile" parameterType="String">
		DELETE FROM FILE_TABLE
		WHERE FILE_NO = #{fileNo}
	</delete>

	<select id="getFilesList" parameterType="String"
		resultType="BoardFile">
		SELECT
		FILE_NO AS fileNo,
		BOARD_NO AS boardNo,
		USER_NO AS
		userNo,
		ORIGIN_NAME AS originName,
		CHANGE_NAME AS changeName,
		ALLOW_DOWNLOAD AS allowDownload,
		File_Size AS fileSize
		FROM
		FILE_TABLE
		WHERE
		BOARD_NO = #{boardNo}
	</select>

	<select id="getSingleFile" parameterType="String"
		resultType="BoardFile">
		SELECT
		FILE_NO AS fileNo,
		BOARD_NO AS boardNo,
		USER_NO AS
		userNo,
		ORIGIN_NAME AS originName,
		CHANGE_NAME AS changeName,
		ALLOW_DOWNLOAD AS allowDownload,
		File_Size AS fileSize
		FROM
		FILE_TABLE
		WHERE
		FILE_NO = #{fileNo}
	</select>
	
	<update id="updateAllowDownload" parameterType="map">
		UPDATE FILE_TABLE
		SET ALLOW_DOWNLOAD = #{allowDownload}
		WHERE BOARD_NO = #{BOARD_NO}
	</update>



	<!-- bno로 게시글 + 첨부파일 정보 조회 -->
<select id="selectBoard" resultMap="boardResult">
    SELECT
        B.BOARD_NO,
        B.BOARD_TYPE,
        B.BOARD_TITLE,
        B.USER_NO,
        M.USER_ID AS BOARD_WRITER, -- 작성자의 ID
        B.BOARD_CONTENT,
        TO_CHAR(B.ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE,
        TO_CHAR(B.MODIFIED_DATE, 'YYYY-MM-DD') AS MODIFIED_DATE,
        B.BOARD_VIEWS,
        B.BOARD_CATEGORY,
        B.STATUS,
        -- 첨부파일 정보
        F.FILE_NO,
        F.ORIGIN_NAME,
        F.CHANGE_NAME,
        F.ALLOW_DOWNLOAD,
        F.FILE_SIZE -- 마지막 쉼표 제거
    FROM
        BOARD B
    JOIN
        MEMBER M ON B.USER_NO = M.USER_NO
    LEFT JOIN
        FILE_TABLE F ON B.BOARD_NO = F.BOARD_NO -- 첨부파일 조인
    WHERE
        B.STATUS = 'Y'
    AND
        B.BOARD_NO = #{boardNo}
</select>


	<update id="updateBoard" parameterType="Board">
		UPDATE BOARD
		SET
		BOARD_CATEGORY = #{boardCategory},
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		MODIFIED_DATE = SYSDATE
		WHERE BOARD_NO
		= #{boardNo}
	</update>
	
<!-- 최근 7일 내 인기 게시글 조회 -->
<select id="selectRecentPopularList" parameterType="map" resultMap="boardResult">
    SELECT *
    FROM (
        SELECT
            b.BOARD_NO,
            b.BOARD_TYPE,
            b.BOARD_TITLE,
            b.USER_NO,
            m.USER_ID AS BOARD_WRITER, -- USER_ID를 BOARD_WRITER로 매핑
            b.BOARD_CONTENT,
            TO_CHAR(b.ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE, -- 작성일 포맷 변경
            b.MODIFIED_DATE,
            b.BOARD_VIEWS,
            b.BOARD_CATEGORY,
            b.STATUS,
            ROW_NUMBER() OVER (ORDER BY b.BOARD_VIEWS DESC) AS RN -- 조회수 기준 내림차순 정렬
        FROM BOARD b
        LEFT JOIN MEMBER m ON b.USER_NO = m.USER_NO -- USER_ID를 가져오기 위한 조인
        WHERE b.STATUS = 'Y'
        AND b.ENROLL_DATE >= SYSDATE - 7
    )
    WHERE RN BETWEEN #{startRow} AND #{endRow} -- 페이징 처리
</select>

<!-- 카테고리별 게시글 수 조회 -->
<select id="selectCountCategoryList" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM BOARD
    WHERE STATUS = 'Y' AND BOARD_CATEGORY = #{type}
</select>


<!-- 카테고리별 게시글 목록 조회 -->
<select id="selectListByCategory" resultMap="boardResult">
    SELECT RNUM, BOARD_NO, BOARD_TYPE, BOARD_TITLE, USER_NO, BOARD_WRITER, BOARD_CONTENT, 
           ENROLL_DATE, MODIFIED_DATE, BOARD_VIEWS, BOARD_CATEGORY, STATUS
    FROM (
        SELECT 
            ROWNUM AS RNUM, 
            A.BOARD_NO, 
            A.BOARD_TYPE,
            A.BOARD_TITLE, 
            A.USER_NO, 
            A.BOARD_WRITER,
            A.BOARD_CONTENT,
            A.ENROLL_DATE,
            A.MODIFIED_DATE,
            A.BOARD_VIEWS, 
            A.BOARD_CATEGORY,
            A.STATUS
        FROM (
            SELECT 
                B.BOARD_NO, 
                B.BOARD_TYPE,
                B.BOARD_TITLE, 
                B.USER_NO, 
                M.USER_ID AS BOARD_WRITER,
                B.BOARD_CONTENT,
                TO_CHAR(B.ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE,
                TO_CHAR(B.MODIFIED_DATE, 'YYYY-MM-DD') AS MODIFIED_DATE,
                B.BOARD_VIEWS, 
                B.BOARD_CATEGORY,
                B.STATUS
            FROM 
                BOARD B
            JOIN 
                MEMBER M ON B.USER_NO = M.USER_NO
            WHERE 
                B.STATUS = 'Y'
                AND B.BOARD_CATEGORY = #{boardCategory}
            ORDER BY 
                B.ENROLL_DATE DESC
        ) A
        WHERE ROWNUM &lt;= #{endRow}
    )
    WHERE RNUM &gt; #{startRow}
</select>





</mapper>                                                                        
	                                                                                                                                                                                                                                                              