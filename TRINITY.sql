--테이블 초기화----------------------------------------------------------------------------------------------------------

DROP TABLE HOSPITAL_ACCOUNT CASCADE CONSTRAINTS;
DROP TABLE HOSPITAL_INFO CASCADE CONSTRAINTS;
DROP TABLE MEDICAL_FIELD CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE DOCTOR_REVIEW CASCADE CONSTRAINTS;
DROP TABLE GENERAL_RESERVATION CASCADE CONSTRAINTS;
DROP TABLE VACCINE_RESERVATION CASCADE CONSTRAINTS;
DROP TABLE HEALTH_RESERVATION CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE FILE_TABLE CASCADE CONSTRAINTS;
DROP TABLE COMMENTS CASCADE CONSTRAINTS;
DROP TABLE GUEST CASCADE CONSTRAINTS;
DROP TABLE H_SUBJECT CASCADE CONSTRAINTS;
DROP TABLE LIKES_TABLE CASCADE CONSTRAINTS;
DROP TABLE RANKUP CASCADE CONSTRAINTS;

--시퀀스 초기화----------------------------------------------------------------------------------------------------------

DROP SEQUENCE SEQ_HOS_NO;
DROP SEQUENCE SEQ_HOS_ACCOUNT_NO;
DROP SEQUENCE SEQ_USER_NO;
DROP SEQUENCE SEQ_BOARD_NO;
DROP SEQUENCE SEQ_REVIEW_NO;
DROP SEQUENCE SEQ_FILE_NO;
DROP SEQUENCE SEQ_MED_NO;
DROP SEQUENCE SEQ_REVIEW_VIEWS;
DROP SEQUENCE SEQ_GST_NO;
DROP SEQUENCE SEQ_G_RES_NO;
DROP SEQUENCE SEQ_V_RES_NO;
DROP SEQUENCE SEQ_H_RES_NO;
DROP SEQUENCE SEQ_SUB_KEY;
DROP SEQUENCE SEQ_COMMENT_NO;
DROP SEQUENCE SEQ_RANKUP;

-- 시퀀스 생성----------------------------------------------------------------------------------------------------------

CREATE SEQUENCE SEQ_HOS_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_HOS_ACCOUNT_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_G_RES_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_V_RES_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_H_RES_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_USER_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_BOARD_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_REVIEW_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_FILE_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_MED_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_REVIEW_VIEWS START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_GST_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_SUB_KEY START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_COMMENT_NO START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_RANKUP START WITH 1 INCREMENT BY 1 NOCACHE;


-- 테이블 생성 ----------------------------------------------------------------------------------------------------------

CREATE TABLE HOSPITAL_INFO (
    HOS_NO VARCHAR2(10) PRIMARY KEY,
    HOS_NAME VARCHAR2(250),
    HOS_ADDRESS VARCHAR2(250),
    HOS_TEL VARCHAR2(20),
    DEPARTMENT VARCHAR2(250),
    HOS_START_TIME1 VARCHAR2(20),
    HOS_CLOSE_TIME1 VARCHAR2(20),
    HOS_START_TIME2 VARCHAR2(20),
    HOS_CLOSE_TIME2 VARCHAR2(20),
    HOS_LATITUDE NUMBER,
    HOS_LONGITUDE NUMBER
);

CREATE TABLE HOSPITAL_ACCOUNT (
    HOS_ACCOUNT_NO VARCHAR2(10) PRIMARY KEY,
    HOS_NO VARCHAR2(10) NOT NULL,
    HOS_ID VARCHAR2(20) NOT NULL,
    HOS_PWD VARCHAR2(20) NOT NULL,
    HOS_INFO VARCHAR2(2000),
    HOS_ONDUTY VARCHAR2(20),
    HOS_PARKING VARCHAR2(100),
    FOREIGN KEY (HOS_NO) REFERENCES HOSPITAL_INFO (HOS_NO)
);

CREATE TABLE MEDICAL_FIELD (
    MED_NO VARCHAR2(10) PRIMARY KEY,
    JOB VARCHAR2(50) NOT NULL,
    MEDICAL_FIELD_ID VARCHAR2(20) NOT NULL
);



CREATE TABLE MEMBER (
    USER_NO VARCHAR2(10) PRIMARY KEY,
    USER_ID VARCHAR2(20) NOT NULL UNIQUE,
    USER_PWD VARCHAR2(100) NOT NULL,
    USER_NAME VARCHAR2(20) NOT NULL,
    EMAIL VARCHAR2(50) NOT NULL,
    PHONE VARCHAR2(20) NOT NULL,
    BIRTHDAY VARCHAR2(6) NOT NULL,
    GENDER CHAR(1) DEFAULT 'M' CHECK (GENDER IN ('M', 'F')),
    ADDRESS VARCHAR2(200),
    ENROLL_DATE DATE DEFAULT SYSDATE,
    STATUS CHAR(1) DEFAULT 'N' CHECK (STATUS IN ('Y', 'N')),
    ISADMIN CHAR(1) DEFAULT 'N',
    MED_KEY VARCHAR2(10),
    HOS_NO VARCHAR2(10),
    USERPROFILE VARCHAR2(255),
    POSTCODE VARCHAR2(50),
    FOREIGN KEY (MED_KEY) REFERENCES MEDICAL_FIELD (MED_NO),
    FOREIGN KEY (HOS_NO) REFERENCES HOSPITAL_INFO (HOS_NO)
);

CREATE TABLE GUEST (
    GST_NO VARCHAR2(10) PRIMARY KEY,
    GST_NAME VARCHAR2(20) NOT NULL,
    GST_EMAIL VARCHAR2(50) NOT NULL,
    GST_PHONE VARCHAR2(20) NOT NULL,
    GST_BIRTH VARCHAR2(10) NOT NULL,
    GST_GENDER CHAR(1) DEFAULT 'M',
    GST_ADDRESS VARCHAR(200),
    CONSTRAINT chk_guest_gender CHECK (GST_GENDER IN ('M', 'F'))
);

CREATE TABLE DOCTOR_REVIEW (
    REVIEW_NO VARCHAR2(10) PRIMARY KEY,
    USER_NO VARCHAR2(10) NOT NULL,
    REVIEW_TITLE VARCHAR2(200) NOT NULL,
    REVIEW_CONTENT VARCHAR2(2000) NOT NULL,
    REVIEW_CREATED_AT DATE DEFAULT SYSDATE,
    REVIEW_UPDATED_AT DATE DEFAULT SYSDATE,
    REVIEW_VIEWS VARCHAR2(10),
    REVIEW_RATING NUMBER,
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO)
);

CREATE TABLE GENERAL_RESERVATION (
    G_RES_NO VARCHAR2(10) PRIMARY KEY,
    USER_NO VARCHAR2(10),
    HOS_NO VARCHAR2(10) NOT NULL,
    GST_NO VARCHAR2(10),
    G_PATIENT_NAME VARCHAR2(20) NOT NULL,
    G_PATIENT_BIRTHDAY VARCHAR2(10) NOT NULL,
    G_RES_DATE DATE NOT NULL,
    G_RES_TIME VARCHAR2(20) NOT NULL,
    G_RES_SUBJECT VARCHAR2(20) NOT NULL,
    G_RES_CONTENT VARCHAR2(3000),
    G_RES_GENDER CHAR(1) NOT NULL,
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO),
    FOREIGN KEY (HOS_NO) REFERENCES HOSPITAL_INFO (HOS_NO),
    FOREIGN KEY (GST_NO) REFERENCES GUEST (GST_NO)
);

CREATE TABLE VACCINE_RESERVATION (
    V_RES_NO VARCHAR2(10) PRIMARY KEY,
    USER_NO VARCHAR2(10),
    HOS_NO VARCHAR2(10) NOT NULL,
    GST_NO VARCHAR2(10),
    PATIENT_NAME VARCHAR2(20) NOT NULL,
    PATIENT_BIRTHDAY VARCHAR2(10) NOT NULL,
    GENDER CHAR(1) DEFAULT 'M' CHECK (GENDER IN ('M', 'F')),
    PHONE VARCHAR2(20),
    EMAIL VARCHAR2(40),
    V_RES_DATE DATE NOT NULL,
    V_RES_TIME VARCHAR2(20) NOT NULL,
    V_TYPE VARCHAR2(20) NOT NULL,
    RES_CONTENT VARCHAR2(300),
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO),
    FOREIGN KEY (HOS_NO) REFERENCES HOSPITAL_INFO (HOS_NO),
    FOREIGN KEY (GST_NO) REFERENCES GUEST (GST_NO)
);

CREATE TABLE HEALTH_RESERVATION (
    H_RES_NO VARCHAR2(10) PRIMARY KEY,
    USER_NO VARCHAR2(10),
    GST_NO VARCHAR2(10),
    HOS_NO VARCHAR2(10) NOT NULL,
    PATIENT_NAME VARCHAR2(20) NOT NULL,
    PATIENT_RESULT VARCHAR2(50) NOT NULL,
    RES_DATE DATE DEFAULT SYSDATE NOT NULL,
    RES_TIME VARCHAR2(20) NOT NULL,
    RES_CATEGORY VARCHAR2(100) NOT NULL,
    PATIENT_BIRTH VARCHAR2(20) NOT NULL,
    PATIENT_EMAIL VARCHAR2(50),
    PATIENT_GENDER CHAR(1) NOT NULL,
    RES_COMMENT VARCHAR2(300),
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO),
    FOREIGN KEY (HOS_NO) REFERENCES HOSPITAL_INFO (HOS_NO),
    FOREIGN KEY (GST_NO) REFERENCES GUEST (GST_NO)
);

CREATE TABLE BOARD_CATEGORY (
    CATEGORY_ID VARCHAR2(20) PRIMARY KEY,    -- 카테고리 고유 ID (예: CAT01)
    CATEGORY_NAME VARCHAR2(50) NOT NULL,    -- 카테고리 이름
    SORT_ORDER INT NOT NULL,                -- 정렬 순서
    IS_ACTIVE CHAR(1) DEFAULT 'Y'           -- 활성화 여부 (Y/N)
);


CREATE TABLE BOARD (
    BOARD_NO VARCHAR2(10) PRIMARY KEY, -- 게시판 번호 (고유값)
    BOARD_TYPE NUMBER, -- 게시판 타입
    USER_NO VARCHAR2(10) NOT NULL, -- 사용자 번호 (외래키로 연결)
    BOARD_TITLE VARCHAR2(200) NOT NULL, -- 게시판 제목
    BOARD_CONTENT VARCHAR2(4000), -- 게시판 내용
    ENROLL_DATE DATE DEFAULT SYSDATE, -- 등록 날짜
    MODIFIED_DATE DATE DEFAULT SYSDATE, -- 수정 날짜
    BOARD_VIEWS VARCHAR2(10) DEFAULT '0', -- 조회수 (기본값: 0)
    CATEGORY_ID VARCHAR2(20), -- 카테고리 ID (CATEGORY 테이블의 외래키)
    STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')), -- 상태 (활성/비활성)
    INQUIRY_CATEGORY VARCHAR2(30), -- 고객 문의 카테고리
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO), -- 사용자와 연결
    FOREIGN KEY (CATEGORY_ID) REFERENCES BOARD_CATEGORY (CATEGORY_ID) -- 카테고리와 연결
);


CREATE TABLE FILE_TABLE (
    FILE_NO VARCHAR2(10) PRIMARY KEY,         -- 파일 고유 번호
    BOARD_NO VARCHAR2(10) NOT NULL,           -- 연관된 게시글 번호
    USER_NO VARCHAR2(10) NOT NULL,            -- 연관된 사용자 번호
    ORIGIN_NAME VARCHAR2(255 BYTE),     -- 원본 파일 이름
    CHANGE_NAME VARCHAR2(255 BYTE),     -- 서버에 저장된 파일 이름
    CONSTRAINT FK_FILE_BOARD FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD (BOARD_NO)
        ON DELETE CASCADE,              -- 게시글 삭제 시 관련 파일 삭제
    CONSTRAINT FK_FILE_MEMBER FOREIGN KEY (USER_NO)
        REFERENCES MEMBER (USER_NO)     -- 사용자 삭제 시 연관된 파일 삭제 가능
);

CREATE TABLE COMMENTS (
    COMMENT_NO VARCHAR2(10) PRIMARY KEY,             -- 댓글 고유 번호
    BOARD_NO VARCHAR2(10) NOT NULL,                 -- 게시글 고유 번호
    USER_NO VARCHAR2(10) NOT NULL,                  -- 사용자 고유 번호
    CONTENT VARCHAR2(2000),                         -- 댓글 내용
    CREATED_AT DATE DEFAULT SYSDATE,                -- 작성일
    LIKE_COUNT NUMBER DEFAULT 0,                    -- 좋아요 수
    DISLIKE_COUNT NUMBER DEFAULT 0,                 -- 싫어요 수
    FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO),  -- 게시판 참조키
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO)   -- 사용자 참조키

    ); 

CREATE TABLE H_SUBJECT (
    SUB_KEY NUMBER PRIMARY KEY,
    HOS_NO VARCHAR2(10) NOT NULL,
    HOS_SUBJECT VARCHAR2(50),
    SUBJECT_CODE VARCHAR2(50),
    FOREIGN KEY (HOS_NO) REFERENCES HOSPITAL_INFO (HOS_NO)
);

CREATE TABLE LIKES_TABLE (
    COMMENT_NO VARCHAR2(10) NOT NULL,                -- 댓글 고유 번호
    USER_NO VARCHAR2(10) NOT NULL,                  -- 사용자 고유 번호
    ENROLL_DATE DATE DEFAULT SYSDATE,               -- 좋아요/싫어요 등록일
    IS_LIKED NUMBER(1) CHECK (IS_LIKED IN (0, 1)),  -- 좋아요(1), 싫어요(0), NULL(누르지 않음)
    PRIMARY KEY (COMMENT_NO, USER_NO),              -- 복합 기본 키
    FOREIGN KEY (COMMENT_NO) REFERENCES COMMENTS (COMMENT_NO), -- 댓글 참조키
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO)          -- 사용자 참조키
);


ALTER TABLE FILE_TABLE ADD ALLOW_DOWNLOAD CHAR(1); -- Y: 허용, N: 비허용
ALTER TABLE FILE_TABLE ADD file_size NUMBER;

CREATE TABLE RANKUP (
    SEQ_NO VARCHAR2(10) PRIMARY KEY,           -- 기본 키
    USER_NO VARCHAR2(100) NOT NULL,          -- 사용자 고유번호
    RES_TITLE VARCHAR2(100) NOT NULL,        -- 신청 제목
    SUBJECT VARCHAR2(100) NOT NULL,          -- 전문과목
    LIC_PICTURE VARCHAR2(200) NOT NULL,      -- 의사 인증 사진 파일 경로
    STATUS CHAR(1) DEFAULT 'W' NOT NULL,     -- 등업 신청 상태 (W: 대기, A: 승인, D: 거부)
    FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO),
    CHECK (STATUS IN ('W', 'A', 'D'))        -- 상태 값 제약 조건
);



-- 트리거 생성----------------------------------------------------------------------------------------------------------

CREATE OR REPLACE TRIGGER trg_guest_id
BEFORE INSERT ON GUEST
FOR EACH ROW
BEGIN
    -- GST_NO가 NULL일 경우에만 시퀀스 값 사용
    IF :NEW.GST_NO IS NULL THEN
        :NEW.GST_NO := 'G' || TO_CHAR(SEQ_GST_NO.NEXTVAL);
    END IF;
END;
/

CREATE OR REPLACE TRIGGER trg_hospital_info_id
BEFORE INSERT ON HOSPITAL_INFO
FOR EACH ROW
BEGIN
    :NEW.HOS_NO := 'H' || TO_CHAR(SEQ_HOS_NO.NEXTVAL);
END;
/

CREATE OR REPLACE TRIGGER trg_hospital_account_id
BEFORE INSERT ON HOSPITAL_ACCOUNT
FOR EACH ROW
BEGIN
    :NEW.HOS_ACCOUNT_NO := 'HA' || TO_CHAR(SEQ_HOS_ACCOUNT_NO.NEXTVAL);
END;
/

CREATE OR REPLACE TRIGGER trg_general_reservation_id
BEFORE INSERT ON GENERAL_RESERVATION
FOR EACH ROW
BEGIN
    :NEW.G_RES_NO := 'GR' || TO_CHAR(SEQ_G_RES_NO.NEXTVAL);
END;
/
CREATE OR REPLACE TRIGGER trg_before_insert_vaccine
BEFORE INSERT ON VACCINE_RESERVATION
FOR EACH ROW
BEGIN
    IF :NEW.gender = '1' OR :NEW.gender = '3' THEN
        :NEW.gender := 'M';
    ELSIF :NEW.gender = '2' OR :NEW.gender = '4' THEN
        :NEW.gender := 'F';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_VACCINE_RESERVATION_ID
BEFORE INSERT ON VACCINE_RESERVATION
FOR EACH ROW
BEGIN
    -- V_RES_NO가 NULL일 경우에만 값을 생성
    IF :NEW.V_RES_NO IS NULL THEN
        :NEW.V_RES_NO := 'VR' || TO_CHAR(SEQ_V_RES_NO.NEXTVAL);
    END IF;
END;
/

CREATE OR REPLACE TRIGGER trg_health_reservation_id
BEFORE INSERT ON HEALTH_RESERVATION
FOR EACH ROW
BEGIN
    :NEW.H_RES_NO := 'HR' || TO_CHAR(SEQ_H_RES_NO.NEXTVAL);
END;
/

CREATE OR REPLACE TRIGGER trg_member_id
BEFORE INSERT ON MEMBER
FOR EACH ROW
BEGIN
    :NEW.USER_NO := 'U' || TO_CHAR(SEQ_USER_NO.NEXTVAL);
END;
/



CREATE OR REPLACE TRIGGER trg_board_id
BEFORE INSERT ON BOARD
FOR EACH ROW
BEGIN
    :NEW.BOARD_NO := 'B' || TO_CHAR(SEQ_BOARD_NO.NEXTVAL);
END;
/

CREATE OR REPLACE TRIGGER trg_doctor_review_id
BEFORE INSERT ON DOCTOR_REVIEW
FOR EACH ROW
BEGIN
    :NEW.REVIEW_NO := 'RV' || TO_CHAR(SEQ_REVIEW_NO.NEXTVAL);
END;
/

CREATE OR REPLACE TRIGGER trg_file_table_id
BEFORE INSERT ON FILE_TABLE
FOR EACH ROW
BEGIN
    :NEW.FILE_NO := 'F' || TO_CHAR(SEQ_FILE_NO.NEXTVAL);
END;
/

CREATE OR REPLACE TRIGGER trg_medical_field_id
BEFORE INSERT ON MEDICAL_FIELD
FOR EACH ROW
BEGIN
    -- MED_NO가 NULL인 경우에만 시퀀스를 사용하여 값을 생성
    IF :NEW.MED_NO IS NULL THEN
        :NEW.MED_NO := 'M' || TO_CHAR(SEQ_MED_NO.NEXTVAL);
    END IF;
END;
/


CREATE OR REPLACE TRIGGER trg_review_views_id
BEFORE INSERT ON DOCTOR_REVIEW
FOR EACH ROW
BEGIN
    :NEW.REVIEW_VIEWS := TO_CHAR(SEQ_REVIEW_VIEWS.NEXTVAL);
END;
/

CREATE OR REPLACE TRIGGER trg_h_subject_id
BEFORE INSERT ON H_SUBJECT
FOR EACH ROW
BEGIN
    :NEW.SUB_KEY := SEQ_SUB_KEY.NEXTVAL;
END;
/

-- 3. 트리거 생성 (SEQ_NO 자동 증가)
CREATE OR REPLACE TRIGGER SEQ_RANKUP_TRIGGER
BEFORE INSERT ON RANKUP
FOR EACH ROW
WHEN (NEW.SEQ_NO IS NULL)
BEGIN
    SELECT SEQ_RANKUP.NEXTVAL INTO :NEW.SEQ_NO FROM DUAL;
END;
/


VARIABLE var_name VARCHAR2(20);
EXEC :var_name := 'example_value';

-- 더미데이터 --------------------------------------------------------------------------------------------------------
INSERT INTO MEMBER (user_no,user_id, user_pwd, user_name, email, phone, birthday, address, gender, isadmin) 
VALUES ('U1','admin1', 'pass1', '관리자', 'admin@example.com', '010-1111-1111',  '801212', 'Seoul, Korea', 'M', 'Y');

INSERT INTO MEMBER (user_no,user_id, user_pwd, user_name, email, phone, birthday, address, gender) 
VALUES ('U2','user01', 'pwd01', 'Alice', 'alice@example.com', '010-1234-5678', '801212', 'Seoul, Korea', 'F');

INSERT INTO MEMBER (user_no,user_id, user_pwd, user_name, email, phone, birthday, address, gender) 
VALUES ('U3','user02', 'pwd02', 'Bob', 'bob@example.com', '010-2345-6789', '801212', 'Busan, Korea', 'M');

INSERT INTO MEMBER (user_no,user_id, user_pwd, user_name, email, phone, birthday, address, gender) 
VALUES ('U4','user03', 'pwd03', 'Charlie', 'charlie@example.com', '010-3456-7890', '801212', 'Incheon, Korea', 'M');

INSERT INTO MEMBER (user_no,user_id, user_pwd, user_name, email, phone, birthday, address, gender) 
VALUES ('U5','user04', 'pwd04', 'Diana', 'diana@example.com', '010-4567-8901', '801212', 'Daegu, Korea', 'F');

INSERT INTO MEMBER (user_no,user_id, user_pwd, user_name, email, phone, birthday, address, gender) 
VALUES ('U6','user05', 'pwd05', 'Evan', 'evan@example.com', '010-5678-9012', '801212', 'Gwangju, Korea', 'M');
-- 고객문의 더미데이터 --------------------------------------------------------------------------------------------------------
DECLARE
    v_user_no MEMBER.USER_NO%TYPE; -- 일반 사용자의 USER_NO를 저장할 변수
    v_admin_no MEMBER.USER_NO%TYPE := 'U1'; -- 관리자 계정
BEGIN
    -- 공지사항 (공지사항은 관리자 작성)
    FOR i IN 1..10 LOOP
        INSERT INTO BOARD (
            BOARD_NO, BOARD_TYPE, USER_NO, BOARD_TITLE, BOARD_CONTENT, 
            ENROLL_DATE, MODIFIED_DATE, BOARD_VIEWS, BOARD_CATEGORY, STATUS
        ) VALUES (
            'B' || TO_CHAR(SEQ_BOARD_NO.NEXTVAL), -- 게시글 번호
            1, -- 공지사항
            v_admin_no, -- 관리자
            '공지사항 제목 ' || i, -- 제목
            '공지사항 내용 ' || i || '입니다.', -- 내용
            SYSDATE - DBMS_RANDOM.VALUE(1, 30), -- 등록일
            SYSDATE - DBMS_RANDOM.VALUE(1, 10), -- 수정일
            TRUNC(DBMS_RANDOM.VALUE(0, 100)), -- 조회수
            '공지사항', -- 카테고리
            'Y' -- 활성화 상태
        );
    END LOOP;

    -- 알림톡 (알림판은 일반 사용자 작성)
    FOR i IN 1..10 LOOP
        -- 랜덤 사용자 USER_NO 가져오기
        SELECT USER_NO INTO v_user_no
        FROM (
            SELECT USER_NO 
            FROM MEMBER 
            WHERE ISADMIN = 'N' -- 일반 사용자만
            ORDER BY DBMS_RANDOM.VALUE -- 랜덤 정렬
        ) WHERE ROWNUM = 1; -- 하나의 사용자만 가져오기

        INSERT INTO BOARD (
            BOARD_NO, BOARD_TYPE, USER_NO, BOARD_TITLE, BOARD_CONTENT, 
            ENROLL_DATE, MODIFIED_DATE, BOARD_VIEWS, BOARD_CATEGORY, STATUS
        ) VALUES (
            'B' || TO_CHAR(SEQ_BOARD_NO.NEXTVAL),
            2, -- 알림판
            v_user_no, -- 일반 사용자
            '알림톡 제목 ' || i,
            '알림톡 내용 ' || i || '입니다.',
            SYSDATE - DBMS_RANDOM.VALUE(1, 30),
            SYSDATE - DBMS_RANDOM.VALUE(1, 10),
            TRUNC(DBMS_RANDOM.VALUE(0, 100)),
            '알림판',
            'Y'
        );
    END LOOP;

    -- FAQ (FAQ는 관리자 작성)
    FOR i IN 1..10 LOOP
        INSERT INTO BOARD (
            BOARD_NO, BOARD_TYPE, USER_NO, BOARD_TITLE, BOARD_CONTENT, 
            ENROLL_DATE, MODIFIED_DATE, BOARD_VIEWS, BOARD_CATEGORY, 
            INQUIRY_CATEGORY, STATUS
        ) VALUES (
            'B' || TO_CHAR(SEQ_BOARD_NO.NEXTVAL),
            3, -- FAQ
            v_admin_no,
            'FAQ 제목 ' || i,
            'FAQ 내용 ' || i || '입니다.',
            SYSDATE - DBMS_RANDOM.VALUE(1, 30),
            SYSDATE - DBMS_RANDOM.VALUE(1, 10),
            TRUNC(DBMS_RANDOM.VALUE(0, 100)),
            'FAQ',
            CASE MOD(i, 4)
                WHEN 0 THEN '회원관련'
                WHEN 1 THEN '사이트이용'
                WHEN 2 THEN '커뮤니티'
                ELSE '이벤트'
            END,
            'Y'
        );
    END LOOP;

    -- Q&A (Q&A는 일반 사용자 작성)
    FOR i IN 1..10 LOOP
        -- 랜덤 사용자 USER_NO 가져오기
        SELECT USER_NO INTO v_user_no
        FROM (
            SELECT USER_NO 
            FROM MEMBER 
            WHERE ISADMIN = 'N' -- 일반 사용자만
            ORDER BY DBMS_RANDOM.VALUE -- 랜덤 정렬
        ) WHERE ROWNUM = 1; -- 하나의 사용자만 가져오기

        INSERT INTO BOARD (
            BOARD_NO, BOARD_TYPE, USER_NO, BOARD_TITLE, BOARD_CONTENT, 
            ENROLL_DATE, MODIFIED_DATE, BOARD_VIEWS, BOARD_CATEGORY, 
            INQUIRY_CATEGORY, STATUS
        ) VALUES (
            'B' || TO_CHAR(SEQ_BOARD_NO.NEXTVAL),
            4, -- Q&A
            v_user_no,
            'QNA 제목 ' || i,
            'QNA 내용 ' || i || '입니다.',
            SYSDATE - DBMS_RANDOM.VALUE(1, 30),
            SYSDATE - DBMS_RANDOM.VALUE(1, 10),
            TRUNC(DBMS_RANDOM.VALUE(0, 100)),
            'QNA',
            CASE MOD(i, 4)
                WHEN 0 THEN '회원관련'
                WHEN 1 THEN '사이트이용'
                WHEN 2 THEN '커뮤니티'
                ELSE '이벤트'
            END,
            'Y'
        );
    END LOOP;
    
END;
/
-- 게시판 더미데이터 --------------------------------------------------------------------------------------------------------

DECLARE
    CURSOR c_user_no IS
        SELECT USER_NO FROM MEMBER WHERE ISADMIN = 'N';
    v_user_no MEMBER.USER_NO%TYPE;
BEGIN
    FOR i IN 1..100 LOOP
        -- 랜덤한 USER_NO 가져오기
        SELECT USER_NO INTO v_user_no
        FROM (
            SELECT USER_NO FROM MEMBER WHERE ISADMIN = 'N'
            ORDER BY DBMS_RANDOM.VALUE
        ) WHERE ROWNUM = 1;

        -- BOARD 데이터 삽입
        INSERT INTO BOARD (
            BOARD_NO, 
            BOARD_TYPE, 
            USER_NO, 
            BOARD_TITLE, 
            BOARD_CONTENT, 
            ENROLL_DATE, 
            MODIFIED_DATE, 
            BOARD_VIEWS, 
            BOARD_CATEGORY, 
            STATUS
        ) VALUES (
            'B' || TO_CHAR(SEQ_BOARD_NO.NEXTVAL), -- BOARD_NO
            MOD(i, 3) + 1,                       -- BOARD_TYPE (1, 2, 3)
            v_user_no,                           -- USER_NO (랜덤 회원)
            '게시글 제목 ' || i,                  -- BOARD_TITLE
            '게시글 내용 ' || i || '입니다.',      -- BOARD_CONTENT
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 30)), -- ENROLL_DATE (지난 30일 내 랜덤)
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 10)), -- MODIFIED_DATE (지난 10일 내 랜덤)
            TRUNC(DBMS_RANDOM.VALUE(0, 1000)),   -- BOARD_VIEWS (0 ~ 999 랜덤)
            CASE MOD(i, 3) 
                WHEN 0 THEN '자유게시판' 
                WHEN 1 THEN '메디톡' 
                ELSE '이벤트게시판' 
            END,                                 -- BOARD_CATEGORY
            'Y'                                  -- STATUS (항상 Y)
        );
    END LOOP;
    COMMIT;
END;
/

DECLARE
    CURSOR c_user_no IS
        SELECT USER_NO, MED_KEY FROM MEMBER; -- MED_KEY 포함하여 사용자 정보 가져옴
    v_user_no MEMBER.USER_NO%TYPE;
    v_med_key MEMBER.MED_KEY%TYPE;
    v_seq_no NUMBER := 1; -- 초기 SEQ_NO 설정
BEGIN
    OPEN c_user_no;
    LOOP
        FETCH c_user_no INTO v_user_no, v_med_key;
        EXIT WHEN c_user_no%NOTFOUND;

        INSERT INTO RANKUP (
            SEQ_NO, USER_NO, RES_TITLE, SUBJECT, LIC_PICTURE, STATUS
        ) VALUES (
            v_seq_no, -- SEQ_NO 증가
            v_user_no, -- MEMBER 테이블에서 가져온 USER_NO
            '전문가 인증 신청 ' || v_seq_no, -- 신청 제목
            CASE MOD(v_seq_no, 2) -- 전문과목
                WHEN 0 THEN '소아과'
                ELSE '산부인과'
            END,
            '/files/lic_picture_' || v_seq_no || '.jpg', -- 인증 사진 경로
            CASE
                WHEN v_med_key IS NOT NULL THEN 'A' -- MED_KEY가 있으면 승인
                ELSE 'W' -- MED_KEY가 없으면 대기
            END
        );

        v_seq_no := v_seq_no + 1; -- SEQ_NO 증가

        IF v_seq_no > 10 THEN -- 10개만 삽입
            EXIT;
        END IF;
    END LOOP;

    CLOSE c_user_no;
END;
/
--MEMBER 테이블의 MED_KEY가 NULL로 변경될 때 관련 데이터를 삭제하는 트리거를 생성
CREATE OR REPLACE TRIGGER trg_member_medkey_null
AFTER UPDATE OF MED_KEY ON MEMBER
FOR EACH ROW
WHEN (NEW.MED_KEY IS NULL)
BEGIN
    DELETE FROM MEDICAL_FIELD
    WHERE MED_NO = :OLD.MED_KEY;
END;
/


INSERT INTO HOSPITAL_INFO (
    HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, 
    HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, 
    HOS_LATITUDE, HOS_LONGITUDE
) VALUES 
('H1', '서울 소아청소년과', '123 서울로, 서울', '02-123-4567', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 37.5665, 126.9780);

INSERT INTO HOSPITAL_INFO (
    HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, 
    HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, 
    HOS_LATITUDE, HOS_LONGITUDE
) VALUES 
('H2', '부산 어린이 건강센터', '456 부산로, 부산', '051-234-5678', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 35.1796, 129.0756);

INSERT INTO HOSPITAL_INFO (
    HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, 
    HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, 
    HOS_LATITUDE, HOS_LONGITUDE
) VALUES 
('H3', '인천 소아과센터', '789 인천로, 인천', '032-345-6789', '소아청소년과', '08:30', '18:00', '12:30', '17:30', 37.4563, 126.7052);

INSERT INTO HOSPITAL_INFO (
    HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, 
    HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, 
    HOS_LATITUDE, HOS_LONGITUDE
) VALUES 
('H4', '대구 소아청소년과', '101 대구로, 대구', '053-456-7890', '소아청소년과', '09:00', '19:00', '14:00', '18:00', 35.8714, 128.6014);

INSERT INTO HOSPITAL_INFO (
    HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, 
    HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, 
    HOS_LATITUDE, HOS_LONGITUDE
) VALUES 
('H5', '광주 소아청소년과의원', '202 광주로, 광주', '062-567-8901', '소아청소년과', '08:30', '17:30', '12:30', '16:30', 35.1595, 126.8526);

INSERT INTO HOSPITAL_INFO (
    HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, 
    HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, 
    HOS_LATITUDE, HOS_LONGITUDE
) VALUES 
('H6', '대전 어린이병원', '303 대전로, 대전', '042-678-9012', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 36.3504, 127.3845);

INSERT INTO HOSPITAL_INFO (
    HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, 
    HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, 
    HOS_LATITUDE, HOS_LONGITUDE
) VALUES 
('H7', '울산 소아병원', '404 울산로, 울산', '052-789-0123', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 35.5384, 129.3114);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE)
VALUES ('H8', '세종 어린이 건강센터', '505 세종로, 세종', '044-890-1234', '소아청소년과', '08:30', '18:30', '12:30', '17:30', 36.4808, 127.2896);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE)
VALUES ('H9', '전주 소아청소년과의원', '606 전주로, 전주', '063-901-2345', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 35.8251, 127.1457);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H10', '춘천 소아청소년과', '707 춘천로, 춘천', '033-012-3456', '소아청소년과', '09:00', '19:00', '14:00', '18:00', 37.8813, 127.7298);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H11', '안양 소아청소년과', '11 Anyang Road, Anyang', '031-111-1111', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 37.3943, 126.9568);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H12', '김해 어린이 건강센터', '12 Gimhae Road, Gimhae', '055-222-2222', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 35.2341, 128.8891);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H13', '평택 소아센터', '13 Pyeongtaek Road, Pyeongtaek', '031-333-3333', '소아청소년과', '08:30', '18:00', '12:30', '17:30', 36.9907, 127.0883);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H14', '수원 소아청소년과', '14 Suwon Road, Suwon', '031-444-4444', '소아청소년과', '08:30', '18:00', '12:30', '17:30', 37.2635, 127.0286);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H15', '제주 소아클리닉', '15 Jeju Road, Jeju', '064-555-5555', '소아청소년과', '08:30', '18:00', '12:30', '17:30', 33.4996, 126.5312);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H16', '포항 어린이병원', '16 Pohang Road, Pohang', '054-666-6666', '소아청소년과', '08:30', '18:00', '12:30', '17:30', 36.0190, 129.3435);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H17', '경주 소아병원', '17 Gyeongju Road, Gyeongju', '054-777-7777', '소아청소년과', '08:30', '18:00', '12:30', '17:30', 35.8562, 129.2248);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H18', '아산 어린이 건강센터', '18 Asan Road, Asan', '041-888-8888', '소아청소년과', '08:30', '18:30', '12:30', '17:30', 36.7895, 127.0048);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H19', '천안 소아청소년과', '19 Cheonan Road, Cheonan', '041-999-9999', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 36.8151, 127.1139);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H20', '구리 어린이병원', '20 Guri Road, Guri', '031-100-1000', '소아청소년과', '08:30', '18:30', '12:30', '17:30', 127.1390, 125.535);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H21', '안양 클리닉', '21 Anyang Road, Anyang', '031-111-1111', '소아청소년과','08:30', '18:30', '12:30', '17:30', 37.3943, 126.968);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H22', '김해 건강병원', '22 Gimhae Road, Gimhae', '055-222-2222', '소아청소년과', '08:30', '18:30', '12:30', '17:30', 35.2341, 128.891);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H23', '평택 소아센터', '23 Pyeongtaek Road, Pyeongtaek', '031-333-3333', '소아청소년과', '08:30', '18:30', '12:30', '17:30', 36.997, 127.0883);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H24', '수 소아청소년과', '24 Suwon Road, Suwon', '031-444-4444', '소아청소년과','08:30', '18:30', '12:30', '17:30', 37.2635, 127.026);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H25', '제주 소아클리닉', '25 Jeju Road, Jeju', '064-555-5555', '소아청소년과', '08:30', '17:30', '12:30', '16:30', 33.4996, 126.512);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H26', '포항 어린이 클리닉', '26 Pohang Road, Pohang', '054-666-6666', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 36.0190, 129.335);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H27', '경주 소아병원', '27 Gyeongju Road, Gyeongju', '054-777-7777', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 35.862, 129.2248);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H28', '아산 어린이센터', '28 Asan Road, Asan', '041-888-8888', '소아청소년과', '08:30', '18:30', '12:30', '17:30', 36.7895, 17.0048);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H29', '천안 소아클리닉', '29 Cheonan Road, Cheonan', '041-999-9999', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 36.851, 127.1139);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H30', '구리 소아과', '30 Guri Road, Guri', '031-100-1000', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 37.5985, 127.190);


INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H31', '안성 소아청소년과', '31 Anyang Road, Anyang', '031-111-1111', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 37.3943, 126.9568);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H32', '김해 어린이병원', '32 Gimhae Road, Gimhae', '055-222-2222', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 35.2341, 128.8891);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H33', '평택 소아과센터', '33 Pyeongtaek Road, Pyeongtaek', '031-333-3333', '소아청소년과', '08:30', '18:00', '12:30', '17:30', 36.9907, 127.0883);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H34', '수원 소아청소년과', '34 Suwon Road, Suwon', '031-444-4444', '소아청소년과', '09:00', '19:00', '14:00', '18:00', 37.2635, 127.0286);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H35', '제주 어린이 건강센터', '35 Jeju Road, Jeju', '064-555-5555', '소아청소년과', '08:30', '17:30', '12:30', '16:30', 33.4996, 126.5312);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H36', '포항 소아과병원', '36 Pohang Road, Pohang', '054-666-6666', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 36.0190, 129.3435);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H37', '경주 소아병원', '37 Gyeongju Road, Gyeongju', '054-777-7777', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 35.8562, 129.2248);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H38', '아산 소아청소년과', '38 Asan Road, Asan', '041-888-8888', '소아청소년과', '08:30', '18:30', '12:30', '17:30', 36.7895, 127.0048);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H39', '천안 소아청소년과', '39 Cheonan Road, Cheonan', '041-999-9999', '소아청소년과', '09:00', '18:00', '13:00', '17:00', 36.8151, 127.1139);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H40', '구리 소아과의원', '40 Guri Road, Guri', '031-100-1000', '소아청소년과', '08:00', '17:00', '12:00', '16:00', 37.5985, 127.1390);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE)
VALUES ('H41', '경채 새벽병원', '30 Guri Road, Guri', '123-444-1321', '소아청소년과', '22:00', '04:00', '00:00', '03:00', 34.5543, 121.1215);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE)
VALUES ('H42', '태영 새벽병원', '20 Guri Road, Guri', '124-144-1321', '소아청소년과', '23:00', '03:00', '01:00', '04:00', 34.2543, 333.1114);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H43', '경기 여성병원', '43 Guri Road, Guri', '031-210-1234', '산부인과', '09:00', '18:00', '13:00', '17:00', 37.6012, 127.1450);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H44', '강남 산부인과의원', '44 Guri Road, Guri', '031-333-5678', '산부인과', '10:00', '19:00', '14:00', '18:00', 37.5990, 127.1412);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H45', '서울 여성의료원', '45 Guri Road, Guri', '032-555-9012', '산부인과', '08:30', '17:30', '13:30', '16:30', 37.6008, 127.1424);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H46', '인천 여성클리닉', '46 Guri Road, Guri', '032-789-2345', '산부인과', '07:30', '16:30', '12:30', '15:30', 37.6035, 127.1467);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H47', '대구 여성의원', '47 Guri Road, Guri', '053-567-8901', '산부인과', '09:00', '18:00', '12:00', '16:00', 37.6047, 127.1480);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H48', '부산 여성병원', '48 Guri Road, Guri', '051-111-2222', '산부인과', '10:00', '19:00', '14:00', '17:00', 37.6050, 127.1493);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H49', '광주 여성의원', '49 Guri Road, Guri', '062-999-3333', '산부인과', '08:00', '17:00', '12:30', '15:30', 37.6072, 127.1501);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H50', '대전 여성클리닉', '50 Guri Road, Guri', '042-222-4444', '산부인과', '07:30', '16:30', '13:00', '16:00', 37.6084, 127.1512);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H51', '울산 여성의료원', '51 Guri Road, Guri', '052-444-5555', '산부인과', '09:30', '18:30', '12:30', '17:30', 37.6097, 127.1525);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H52', '전주 여성병원', '52 Guri Road, Guri', '063-333-6666', '산부인과', '10:00', '20:00', '14:00', '18:00', 37.6105, 127.1536);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H53', '경기 여성병원', '53 Guri Road, Guri', '031-123-4567', '산부인과', '09:00', '18:00', '14:00', '17:00', 37.6112, 127.1547);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H54', '서울 여성의료원', '54 Guri Road, Guri', '02-987-6543', '산부인과', '08:30', '17:30', '13:30', '16:30', 37.6123, 127.1558);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H55', '인천 여성클리닉', '55 Guri Road, Guri', '032-654-3210', '산부인과', '07:30', '16:30', '12:30', '15:30', 37.6134, 127.1569);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H56', '대구 여성의원', '56 Guri Road, Guri', '053-321-9876', '산부인과', '10:00', '19:00', '15:00', '18:00', 37.6145, 127.1571);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H57', '부산 여성병원', '57 Guri Road, Guri', '051-111-2222', '산부인과', '09:30', '18:30', '13:30', '17:30', 37.6156, 127.1582);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H58', '광주 여성의원', '58 Guri Road, Guri', '062-333-4444', '산부인과', '08:00', '17:00', '12:30', '16:30', 37.6167, 127.1593);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H59', '대전 여성클리닉', '59 Guri Road, Guri', '042-555-6666', '산부인과', '10:00', '20:00', '14:00', '18:00', 37.6178, 127.1604);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H60', '울산 여성의료원', '60 Guri Road, Guri', '052-777-8888', '산부인과', '07:00', '16:00', '11:00', '15:00', 37.6189, 127.1615);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H61', '전주 여성병원', '61 Guri Road, Guri', '063-999-0000', '산부인과', '09:00', '18:00', '14:00', '17:00', 37.6200, 127.1626);

INSERT INTO HOSPITAL_INFO (HOS_NO, HOS_NAME, HOS_ADDRESS, HOS_TEL, DEPARTMENT, HOS_START_TIME1, HOS_CLOSE_TIME1, HOS_START_TIME2, HOS_CLOSE_TIME2, HOS_LATITUDE, HOS_LONGITUDE) 
VALUES ('H62', '강릉 여성의원', '62 Guri Road, Guri', '033-888-7777', '산부인과', '08:30', '17:30', '13:30', '16:30', 37.6211, 127.1637);




INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H1', 'hos1', 'pwd1', 'Y', '10');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H2', 'hos2', 'pwd2', 'N', '15');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H3', 'hos3', 'pwd3', 'Y', '20');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H4', 'hos4', 'pwd4', 'Y', '12');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H5', 'hos5', 'pwd5', 'N', '8');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H6', 'hos6', 'pwd6', 'Y', '25');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H7', 'hos7', 'pwd7', 'N', '30');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H8', 'hos8', 'pwd8', 'Y', '18');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H9', 'hos9', 'pwd9', 'Y', '22');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H10', 'hos10', 'pwd10', 'N', '16');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H11', 'hos11', 'pwd11', 'Y', '12');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H12', 'hos12', 'pwd12', 'N', '8');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H13', 'hos13', 'pwd13', 'Y', '10');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H14', 'hos14', 'pwd14', 'Y', '14');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H15', 'hos15', 'pwd15', 'N', '6');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H16', 'hos16', 'pwd16', 'Y', '10');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H17', 'hos17', 'pwd17', 'N', '20');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H18', 'hos18', 'pwd18', 'Y', '15');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H19', 'hos19', 'pwd19', 'Y', '18');
INSERT INTO HOSPITAL_ACCOUNT (HOS_NO, HOS_ID, HOS_PWD, HOS_ONDUTY, HOS_PARKING) VALUES ('H20', 'hos20', 'pwd20', 'N', '12');



INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '소아과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '소아과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '소아과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '소아과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '산부인과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '산부인과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '산부인과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '산부인과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '산부인과');

INSERT INTO MEDICAL_FIELD (JOB, MEDICAL_FIELD_ID)
VALUES ('의사', '산부인과');



INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1001', 'doc1', 'password1', '김의사', 'doc1@example.com', '010-1111-1111', '801212' , 'M', '서울특별시 강남구', 'M1');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1002', 'doc2', 'password2', '이의사', 'doc2@example.com', '010-2222-2222','801212', 'F', '부산광역시 해운대구', 'M2');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1003', 'doc3', 'password3', '박의사', 'doc3@example.com', '010-3333-3333', '801212', 'M', '대구광역시 중구', 'M3');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1004', 'doc4', 'password4', '최의사', 'doc4@example.com', '010-4444-4444', '801212', 'F', '인천광역시 남동구', 'M4');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1005', 'doc5', 'password5', '정의사', 'doc5@example.com', '010-5555-5555', '801212', 'M', '광주광역시 북구', 'M5');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1006', 'doc6', 'password6', '강의사', 'doc6@example.com', '010-6666-6666', '801212', 'F', '대전광역시 서구', 'M6');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1007', 'doc7', 'password7', '윤의사', 'doc7@example.com', '010-7777-7777', '801212', 'M', '울산광역시 남구', 'M7');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1008', 'doc8', 'password8', '장은사', 'doc8@example.com', '010-8888-8888', '801212', 'F', '경기도 수원시', 'M8');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1009', 'doc9', 'password9', '하의사', 'doc9@example.com', '010-9999-9999', '801212', 'M', '강원도 춘천시', 'M9');

INSERT INTO MEMBER (USER_NO, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE, BIRTHDAY, GENDER, ADDRESS, MED_KEY)
VALUES ('U1010', 'doc10', 'password10', '황의사', 'doc10@example.com', '010-1010-1010', '801212', 'F', '제주특별자치도 제주시', 'M10');




--DOCTOR_REVIEW 더미데이터

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES ('RV1', 'U1', '최고의 의사', '의사 선생님 정말 친절하시고 상담도 잘 해주셨어요!', SYSDATE, SYSDATE, '120', 5);

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV2', 'U2', '불친절했던 경험', '상담 시간이 너무 짧아서 아쉬웠어요.', SYSDATE, SYSDATE, '45', 3);

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV3', 'U3', '감사한 마음으로 남깁니다', '수술 후 회복이 잘 되어 감사드립니다.', SYSDATE, SYSDATE, '200', 5);

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV4', 'U4', '청결과 위생이 아쉬움', '병원 내부 위생이 조금 부족해 보였습니다.', SYSDATE, SYSDATE, '85', 3);

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV5', 'U5', '아이를 위한 최고의 병원', '아이의 마음까지 헤아려주셔서 감사합니다.', SYSDATE, SYSDATE, '170', 5);

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV6', 'U6', '기대 이하였던 진료', '진료 대기 시간이 너무 길었습니다.', SYSDATE, SYSDATE, '55', 2);

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV7', 'U7', '재방문 의사 있습니다', '친절하고 꼼꼼한 상담 감사합니다.', SYSDATE, SYSDATE, '130', 4);

INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV8', 'U8', '진료 만족 후기', '의사 선생님이 아주 자세히 설명해주셔서 안심했습니다.', SYSDATE, SYSDATE, '150', 5);
 
INSERT INTO DOCTOR_REVIEW (REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV9', 'U9', '평범한 병원', '특별히 나쁘지도, 좋지도 않았습니다.', SYSDATE, SYSDATE, '60', 3);

INSERT INTO DOCTOR_REVIEW 
(REVIEW_NO, USER_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED_AT, REVIEW_UPDATED_AT, REVIEW_VIEWS, REVIEW_RATING) 
VALUES('RV10', 'U10', '친절과 전문성의 조화', '친절하고 전문적인 진료를 받았습니다.', SYSDATE, SYSDATE, 180, 5);

--커밋--------------------------------------------------------------------------------------------------------
COMMIT; 



